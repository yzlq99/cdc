version: '2'

networks:
  zoo_kafka:
    driver: bridge

services:
  zoo1:
    image: zookeeper:3.4
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2181:2181
    volumes:
      - "./cdc_data/zoo1/data:/data"
      - "./cdc_data/zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zoo_kafka

  zoo2:
    image: zookeeper:3.4
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
      - 2180:2181
    volumes:
      - "./cdc_data/zoo2/data:/data"
      - "./cdc_data/zoo2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zoo_kafka

  zoo3:
    image: zookeeper:3.4
    restart: always
    hostname: zoo3
    container_name: zoo3
    ports:
      - 2179:2181
    volumes:
      - "./cdc_data/zoo3/data:/data"
      - "./cdc_data/zoo3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      - zoo_kafka

  kafka1:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9082:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.88.123:9082  # host 为当前宿主机 ip
      KAFKA_ADVERTISED_HOST_NAME: 192.168.88.123
      KAFKA_ADVERTISED_PORT: 9082
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      JMX_PORT: 6501
      # 副本数量
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      # acks 参数指定了必须要有多少个分区副本收到消息，生产者才认为该消息是写入成功的，这个参数对于消息是否丢失起着重要作用
      KAFKA_ACKS: "all"
      # 生产者可以重发消息的次数，如果达到这个次数，生产者会放弃重试并返回错误
      KAFKA_RETRIES: 3
      # 幂等 exactly-once，避免重复消费
      KAFKA_ENABLE_IDEMPOTENCE: "true"
      # 控制的是消息至少被写入到多少个副本才算是"真正写入"
      KAFKA_MIN_INSYNC_REPLICAS: 1
      # 日志清理策略：压缩
      KAFKA_LOG_CLEANUP_POLICY: "compact"
      # 日志清理时间间隔
      KAFKA_LOG_RETENTION_HOURS: 168
      # topic 默认的 partition 个数。 
      KAFKA_NUM_PARTITIONS: 5
    volumes:
      - ./cdc_data/kafka1/logs:/kafka
    external_links:
      - zoo1
      - zoo2
      - zoo3
    networks:
      - zoo_kafka

  kafka2:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9083:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.88.123:9083 
      KAFKA_ADVERTISED_HOST_NAME: 192.168.88.123
      KAFKA_ADVERTISED_PORT: 9083
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      JMX_PORT: 6502
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_ACKS: "all"
      KAFKA_RETRIES: 3
      # 幂等
      KAFKA_ENABLE_IDEMPOTENCE: "true"
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_LOG_CLEANUP_POLICY: "compact"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_NUM_PARTITIONS: 5
    volumes:
      - ./cdc_data/kafka2/logs:/kafka
    external_links:  # 连接本compose文件以外的container
      - zoo1
      - zoo2
      - zoo3
    networks:
      - zoo_kafka

  kafka3:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9084:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.88.123:9084
      KAFKA_ADVERTISED_HOST_NAME: 192.168.88.123
      KAFKA_ADVERTISED_PORT: 9084
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      JMX_PORT: 6503
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_ACKS: "all"
      KAFKA_RETRIES: 3
      # 幂等
      KAFKA_ENABLE_IDEMPOTENCE: "true"
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_LOG_CLEANUP_POLICY: "compact"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_NUM_PARTITIONS: 5
    volumes:
      - ./cdc_data/kafka3/logs:/kafka
    external_links:  # 连接本compose文件以外的container
      - zoo1
      - zoo2
      - zoo3
    networks:
      - zoo_kafka

  kowl:
    image: quay.io/cloudhut/kowl:master
    restart: always
    container_name: kowl
    hostname: kowl
    volumes:
      - ./configs/kowl_config.yaml:/etc/kowl/config.yaml
    ports:
      - "9009:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - zoo_kafka

  connect:
    image: debezium/connect:1.2
    restart: always
    hostname: connect
    container_name: connect
    ports:
    - "8093:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: kafka1:9092
    volumes:
    - ./cdc_data/logs:/kafka/logs
    external_links:
    - zoo1
    - zoo2
    - zoo3
    - kafka1
    - kafka2
    - kafka3
    networks:
      - zoo_kafka
